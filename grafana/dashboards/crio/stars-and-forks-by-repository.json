{
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "title": "Stars and Forks by Repository",
  "panels": [
    {
      "yaxis": {
        "align": false,
        "alignLevel": null
      },
      "transparent": true,
      "bars": false,
      "percentage": false,
      "stack": false,
      "id": 1,
      "seriesOverrides": [
        {
          "alias": "Stargazers",
          "yaxis": 1
        },
        {
          "alias": "Forks",
          "yaxis": 2
        },
        {
          "yaxis": 2,
          "alias": "Open Issues and PRs"
        }
      ],
      "fillGradient": 0,
      "fill": 0,
      "options": {
        "dataLinks": []
      },
      "dashLength": 10,
      "legend": {
        "min": true,
        "total": false,
        "hideEmpty": false,
        "rightSide": false,
        "max": true,
        "show": true,
        "avg": true,
        "values": true,
        "alignAsTable": false,
        "current": true,
        "hideZero": false
      },
      "lines": true,
      "spaceLength": 10,
      "title": "Community stats ([[repo_name]])",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "timeFrom": null,
      "targets": [
        {
          "dsType": "influxdb",
          "group": [],
          "rawSql": "select\n  time,\n  value as \"Stargazers\"\nfrom\n  swatchers w\nwhere\n  $__timeFilter(time)\n  and series = 'watch[[repo]]watch'\n  and period = 'w'\norder by\n  time\n;",
          "refId": "A",
          "resultFormat": "time_series",
          "query": "",
          "metricColumn": "none",
          "tags": [],
          "orderByTime": "ASC",
          "alias": "",
          "timeColumn": "time",
          "where": [
            {
              "params": [],
              "type": "macro",
              "name": "$__timeFilter"
            }
          ],
          "groupBy": [],
          "rawQuery": true,
          "format": "time_series",
          "policy": "autogen",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "measurement": "reviewers_d",
          "hide": false
        },
        {
          "tags": [],
          "orderByTime": "ASC",
          "rawSql": "select\n  time,\n  value as \"Forks\"\nfrom\n  swatchers w\nwhere\n  $__timeFilter(time)\n  and series = 'watch[[repo]]forks'\n  and period = 'w'\norder by\n  time\n;",
          "query": "",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "group": [],
          "groupBy": [],
          "dsType": "influxdb",
          "policy": "autogen",
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "measurement": "reviewers_d",
          "resultFormat": "time_series",
          "alias": "",
          "refId": "B",
          "format": "time_series",
          "where": [
            {
              "type": "macro",
              "name": "$__timeFilter",
              "params": []
            }
          ],
          "timeColumn": "time"
        },
        {
          "hide": false,
          "timeColumn": "time",
          "metricColumn": "none",
          "query": "",
          "rawQuery": true,
          "measurement": "reviewers_d",
          "orderByTime": "ASC",
          "rawSql": "select\n  time,\n  value as \"Open Issues and PRs\"\nfrom\n  swatchers w\nwhere\n  $__timeFilter(time)\n  and series = 'watch[[repo]]opiss'\n  and period = 'w'\norder by\n  time\n;",
          "where": [
            {
              "params": [],
              "type": "macro",
              "name": "$__timeFilter"
            }
          ],
          "group": [],
          "policy": "autogen",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "alias": "",
          "tags": [],
          "format": "time_series",
          "resultFormat": "time_series",
          "dsType": "influxdb",
          "groupBy": []
        }
      ],
      "thresholds": [],
      "yaxes": [
        {
          "show": true,
          "format": "none",
          "label": "Stargazers",
          "logBase": 1,
          "max": null,
          "min": "0"
        },
        {
          "min": "0",
          "show": true,
          "format": "none",
          "label": "Forks, Open issues and PRs",
          "logBase": 1,
          "max": null
        }
      ],
      "hiddenSeries": false,
      "description": "Community stats ([[repo_name]])",
      "renderer": "flot",
      "timeShift": null,
      "steppedLine": false,
      "dashes": false,
      "links": [],
      "xaxis": {
        "values": [
          "total"
        ],
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true
      },
      "gridPos": {
        "h": 14,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "type": "graph",
      "aliasColors": {},
      "pointradius": 1,
      "datasource": "psql",
      "points": false,
      "decimals": 0,
      "nullPointMode": "null",
      "timeRegions": [],
      "linewidth": 1
    },
    {
      "yaxes": [
        {
          "format": "none",
          "label": "Stargazers",
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "none",
          "label": "Forks, Open issues and PRs",
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        }
      ],
      "decimals": 0,
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": [
          "total"
        ]
      },
      "percentage": false,
      "id": 12,
      "nullPointMode": "null",
      "tooltip": {
        "value_type": "individual",
        "shared": true,
        "sort": 2
      },
      "type": "graph",
      "targets": [
        {
          "groupBy": [],
          "format": "time_series",
          "dsType": "influxdb",
          "measurement": "reviewers_d",
          "rawSql": "select\n  time,\n  value as \"All Stargazers\"\nfrom\n  swatchers w\nwhere\n  $__timeFilter(time)\n  and series = 'allwatchallwatch'\n  and period = 'w'\norder by\n  time\n;",
          "group": [],
          "where": [
            {
              "params": [],
              "type": "macro",
              "name": "$__timeFilter"
            }
          ],
          "hide": false,
          "policy": "autogen",
          "orderByTime": "ASC",
          "tags": [],
          "metricColumn": "none",
          "query": "",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "type": "field",
                "params": [
                  "value"
                ]
              }
            ]
          ],
          "alias": "",
          "rawQuery": true,
          "timeColumn": "time"
        },
        {
          "dsType": "influxdb",
          "timeColumn": "time",
          "groupBy": [],
          "resultFormat": "time_series",
          "group": [],
          "policy": "autogen",
          "metricColumn": "none",
          "rawQuery": true,
          "where": [
            {
              "params": [],
              "type": "macro",
              "name": "$__timeFilter"
            }
          ],
          "format": "time_series",
          "alias": "",
          "refId": "B",
          "orderByTime": "ASC",
          "tags": [],
          "measurement": "reviewers_d",
          "query": "",
          "hide": false,
          "rawSql": "select\n  time,\n  value as \"All Forks\"\nfrom\n  swatchers w\nwhere\n  $__timeFilter(time)\n  and series = 'allwatchallforks'\n  and period = 'w'\norder by\n  time\n;",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ]
        },
        {
          "rawSql": "select\n  time,\n  value as \"All Open Issues and PRs\"\nfrom\n  swatchers w\nwhere\n  $__timeFilter(time)\n  and series = 'allwatchallopiss'\n  and period = 'w'\norder by\n  time\n;",
          "format": "time_series",
          "dsType": "influxdb",
          "where": [
            {
              "params": [],
              "type": "macro",
              "name": "$__timeFilter"
            }
          ],
          "groupBy": [],
          "metricColumn": "none",
          "refId": "C",
          "policy": "autogen",
          "tags": [],
          "group": [],
          "measurement": "reviewers_d",
          "alias": "",
          "hide": false,
          "orderByTime": "ASC",
          "rawQuery": true,
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "timeColumn": "time",
          "query": ""
        }
      ],
      "bars": false,
      "linewidth": 1,
      "dashes": false,
      "datasource": "psql",
      "gridPos": {
        "x": 0,
        "y": 16,
        "h": 14,
        "w": 24
      },
      "seriesOverrides": [
        {
          "yaxis": 1,
          "alias": "All Stargazers"
        },
        {
          "alias": "All Forks",
          "yaxis": 1
        },
        {
          "alias": "All Open Issues and PRs",
          "yaxis": 2
        }
      ],
      "dashLength": 10,
      "fillGradient": 0,
      "lines": true,
      "spaceLength": 10,
      "options": {
        "dataLinks": []
      },
      "timeShift": null,
      "renderer": "flot",
      "stack": false,
      "transparent": true,
      "hiddenSeries": false,
      "timeRegions": [],
      "points": false,
      "yaxis": {
        "alignLevel": null,
        "align": false
      },
      "steppedLine": false,
      "pointradius": 1,
      "aliasColors": {},
      "title": "Community stats combined",
      "fill": 0,
      "legend": {
        "hideEmpty": false,
        "hideZero": false,
        "max": true,
        "alignAsTable": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true,
        "avg": true,
        "current": true,
        "min": true
      },
      "description": "Community stats combined",
      "links": [],
      "timeFrom": null,
      "thresholds": []
    },
    {
      "gridPos": {
        "x": 0,
        "y": 30,
        "h": 10,
        "w": 24
      },
      "title": "Dashboard documentation",
      "content": "${docs:raw}",
      "id": 11,
      "type": "text",
      "datasource": null,
      "links": [],
      "options": {},
      "mode": "html"
    }
  ],
  "graphTooltip": 0,
  "id": 34,
  "templating": {
    "list": [
      {
        "label": null,
        "sort": 0,
        "refresh": 1,
        "definition": "",
        "query": "select value_s from gha_vars where name = 'full_name'",
        "multi": false,
        "hide": 2,
        "includeAll": false,
        "regex": "",
        "tagValuesQuery": "",
        "current": {
          "text": "CRI-O",
          "value": "CRI-O"
        },
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "allValue": null,
        "name": "full_name",
        "datasource": "psql",
        "skipUrlSync": true,
        "options": [],
        "useTags": false
      },
      {
        "tagValuesQuery": "",
        "tagsQuery": "",
        "allValue": null,
        "hide": 0,
        "options": [],
        "type": "query",
        "datasource": "psql",
        "query": "select top_repo_names_name from ttop_repo_names order by 1",
        "useTags": false,
        "refresh": 1,
        "skipUrlSync": false,
        "includeAll": false,
        "regex": "",
        "tags": [],
        "multi": false,
        "name": "repo_name",
        "label": "Repository",
        "current": {
          "value": "cri-o/cri-o",
          "text": "cri-o/cri-o"
        },
        "definition": "",
        "sort": 1
      },
      {
        "query": "select top_repo_names_value from ttop_repo_names where top_repo_names_name = '[[repo_name]]'",
        "refresh": 1,
        "tagsQuery": "",
        "datasource": "psql",
        "skipUrlSync": true,
        "tags": [],
        "current": {
          "text": "criocrio",
          "value": "criocrio"
        },
        "label": "",
        "allValue": null,
        "type": "query",
        "multi": false,
        "options": [],
        "regex": "",
        "hide": 2,
        "includeAll": false,
        "name": "repo",
        "sort": 0,
        "tagValuesQuery": "",
        "definition": "",
        "useTags": false
      },
      {
        "label": null,
        "datasource": "psql",
        "definition": "",
        "tagsQuery": "",
        "options": [],
        "hide": 2,
        "multi": false,
        "tags": [],
        "type": "query",
        "current": {
          "text": "<h1 id=\"dashboard-header\">CRI-O community stats dashboard</h1>\n<p>Links:</p>\n<ul>\n<li>Metric <a href=\"https://github.com/cncf/devstats/blob/master/metrics/shared/watchers.sql\" target=\"_blank\">SQL file</a>.</li>\n<li>TSDB <a href=\"https://github.com/cncf/devstats/blob/master/metrics/shared/metrics.yaml\" target=\"_blank\">series definition</a>. Search for <code>watchers</code></li>\n<li>Grafana dashboard <a href=\"https://github.com/cncf/devstats/blob/master/grafana/dashboards/crio/community-stats.json\" target=\"_blank\">JSON</a>.</li>\n</ul>\n<h1 id=\"description\">Description</h1>\n<ul>\n<li>This dashboard shows forks, stars, open issues and PRs charts for a given repository</li>\n<li>Selecting period (for example week) means that dashboard will show maximum value in those periods.</li>\n<li>See <a href=\"https://github.com/cncf/devstats/blob/master/docs/periods.md\" target=\"_blank\">here</a> for more informations about periods.</li>\n</ul>",
          "value": "<h1 id=\"dashboard-header\">CRI-O community stats dashboard</h1>\n<p>Links:</p>\n<ul>\n<li>Metric <a href=\"https://github.com/cncf/devstats/blob/master/metrics/shared/watchers.sql\" target=\"_blank\">SQL file</a>.</li>\n<li>TSDB <a href=\"https://github.com/cncf/devstats/blob/master/metrics/shared/metrics.yaml\" target=\"_blank\">series definition</a>. Search for <code>watchers</code></li>\n<li>Grafana dashboard <a href=\"https://github.com/cncf/devstats/blob/master/grafana/dashboards/crio/community-stats.json\" target=\"_blank\">JSON</a>.</li>\n</ul>\n<h1 id=\"description\">Description</h1>\n<ul>\n<li>This dashboard shows forks, stars, open issues and PRs charts for a given repository</li>\n<li>Selecting period (for example week) means that dashboard will show maximum value in those periods.</li>\n<li>See <a href=\"https://github.com/cncf/devstats/blob/master/docs/periods.md\" target=\"_blank\">here</a> for more informations about periods.</li>\n</ul>"
        },
        "sort": 0,
        "useTags": false,
        "tagValuesQuery": "",
        "allValue": null,
        "skipUrlSync": true,
        "query": "select value_s from gha_vars where name = 'community_stats_docs_html'",
        "includeAll": false,
        "refresh": 1,
        "name": "docs",
        "regex": ""
      }
    ]
  },
  "time": {
    "from": "now-2y",
    "to": "now"
  },
  "uid": "3",
  "links": [],
  "version": 2,
  "schemaVersion": 21,
  "editable": true,
  "timezone": "",
  "style": "dark",
  "annotations": {
    "list": [
      {
        "type": "dashboard",
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts"
      },
      {
        "rawQuery": "select extract(epoch from time) AS time, title as text, description as tags from sannotations where $__timeFilter(time)",
        "titleColumn": "[[full_name]] release",
        "enable": true,
        "hide": false,
        "name": "Releases",
        "showIn": 0,
        "textColumn": "",
        "datasource": "psql",
        "iconColor": "rgba(255, 96, 96, 1)",
        "limit": 100,
        "query": "SELECT title, description from annotations WHERE $timeFilter order by time asc",
        "tagsColumn": "title,description",
        "type": "alert"
      }
    ]
  },
  "tags": [
    "dashboard",
    "crio"
  ],
  "iteration": 1578400483185,
  "gnetId": null,
  "refresh": false
}
